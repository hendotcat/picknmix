@use "sass:map";

@mixin border-box {
  html {
    box-sizing: border-box;
  }

  *,
  *:before,
  *:after {
    box-sizing: inherit;
  }
}

@mixin column {
  --column: calc(
    var(--width) - var(--margin) * 2
  );
}

@mixin description-list {
  display: flex;
  flex-direction: column;
  width: var(--column);

  dt {
    font-family: var(--slab);
    font-size: var(--font-size-14);
  }

  dd {
    font-family: var(--slab);
    font-size: var(--font-size-12);
    margin: 0;
  }

  dd:not(:last-child) {
    margin-bottom: var(--margin);
  }
}

@mixin font-families($platform: null) {
  $mono: (
    Apple: "Menlo",
    Windows: "Consolas",
  );
  $sans: (
    Apple: "Helvetica",
    Windows: "Calibri",
  );
  $serif: (
    Apple: "Times New Roman",
    Windows: "Constantia",
  );
  $slab: (
    Apple: "Rockwell",
    Windows: "Cambria",
  );
  --mono: #{if(
    $platform,
    map.get($mono, $platform),
    map.values($mono)
  )}, monospace;
  --sans: #{if(
    $platform,
    map.get($sans, $platform),
    map.values($sans)
  )}, sans-serif;
  --serif: #{if(
    $platform,
    map.get($serif, $platform),
    map.values($serif)
  )}, serif;
  --slab: #{if(
    $platform,
    map.get($slab, $platform),
    map.values($slab)
  )}, serif;
}

@mixin font-sizes {
  --font-size-12: clamp(
    1rem,
    calc(1rem + (100vw - var(--margin) * 2 - 8rem) / 120),
    1.2rem
  );
  --font-size-14: clamp(
    1rem,
    calc(1rem + (100vw - var(--margin) * 2 - 8rem) / 48),
    1.4rem
  );
  --font-size-20: clamp(
    1rem,
    calc(1rem + (100vw - var(--margin) * 2 - 8rem) / 24),
    2rem
  );
  --font-size-30: clamp(
    1rem,
    calc(1rem + (100vw - var(--margin) * 2 - 8rem) / 12),
    3rem
  );
  --font-size-40: clamp(
    1rem,
    calc(1rem + (100vw - var(--margin) * 2 - 8rem) / 8),
    4rem
  );
}

@mixin header {
  display: grid;
  justify-content: center;
  min-height: var(--column);
  place-content: center;
  width: var(--column);

  h1 {
    font-family: var(--slab);
    font-size: var(--font-size-30);
    text-align: center;
    margin: 0;
  }

  p {
    color: var(--pink);
    font-family: var(--slab);
    font-size: var(--font-size-14);
    margin: 0;
    text-align: center;
  }
}

@mixin margin {
  --margin: clamp(
    0rem,
    calc((100vw - 16rem) / 2),
    1rem
  );
}

@mixin palette {
  @media (prefers-color-scheme: light) {
    --bg0: ghostwhite;
    --bg1: lavenderblush;
    --fg: darkslategray;
    --red: firebrick;
    --orange: orangered;
    --yellow: gold;
    --green: green;
    --blue: blue;
    --pink: mediumvioletred;
    --purple: rebeccapurple;
  }

  @media (prefers-color-scheme: dark) {
    --bg0: black;
    --bg1: midnightblue;
    --fg: ghostwhite;
    --red: tomato;
    --orange: orange;
    --yellow: khaki;
    --green: limegreen;
    --blue: deepskyblue;
    --pink: hotpink;
    --purple: fuchsia;
  }
}

@mixin theme {
  @include border-box;

  :root {
    @include column;
    @include font-families;
    @include font-sizes;
    @include margin;
    @include palette;
    @include width;
  }

  body {
    background-color: var(--bg0);
    color: var(--fg);
    margin: 0;
  }

  article,
  main {
    align-items: center;
    display: flex;
    flex-direction: column;
  }

  main > header,
  main > article > header {
    @include header;
  }

  dl {
    @include description-list;
  }
}

@mixin width {
  --width: min(
    100vw,
    32rem
  );
}

